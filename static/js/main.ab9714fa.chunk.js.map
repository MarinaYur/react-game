{"version":3,"sources":["images/logo.svg","birds.mp3","sound.mp3","SoundsMusic.js","App.js","reportWebVitals.js","index.js"],"names":["SoundsMusic","audioMusic","document","getElementById","audioSound","useState","volumeSound","setVolume","valueMusic","setValueMusic","valueSound","setValueSound","musicOff","setMusicOff","soundOff","setSoundOff","handleMusicClick","e","target","value","min","pause","play","volume","useEffect","dataMusicSoundSaved","JSON","parse","sessionStorage","getItem","valuesToSave","setItem","stringify","className","loop","id","src","birds","max","type","name","step","onLoad","onClick","onChange","sound","onInput","App","props","timer","theBestResult","displayStatistics","statistics","twoOpenedValue","setTimer","state","cardLimitation","imageNumber","progressGame","remainingTime","setNumberOfCards","backgroundColor","countPairsOfOpenedCards","popapMessage","classActive","startGame","bind","timeToRemember","openCloseCards","timerOfGame","chooseTimer","chooseNumberOfCards","setBackgroundColor","hideExtraCards","finishGame","fullscreen","showStatistics","this","userState","setState","split","nextProps","nextState","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","getAttribute","console","log","closest","style","background","buttonId","display","clearInterval","setInterval","arrayOfImageNumber","number","k","push","shuffle","i","length","j","Math","floor","random","setTimeout","index","parseInt","shift","filter","item","valueImageNumber","load","clickApp","data","isActiveButton","isActiveButtonNumber","isActiveButtonColor","addClassNotAvailable","data-index","href","logo","alt","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ab9714fa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.ad178c0d.svg\";","export default __webpack_public_path__ + \"static/media/birds.3515c56d.mp3\";","export default __webpack_public_path__ + \"static/media/sound.11b9ae53.mp3\";","import React from 'react';\nimport birds from './birds.mp3';\nimport sound from './sound.mp3';\nimport './SoundsMusic.css';\nimport { useState, useEffect } from \"react\";\n\nexport default function SoundsMusic() {\n  const audioMusic = document.getElementById('audio-music');\n  const audioSound = document.getElementById('audio-sound');\n  let [volumeSound, setVolume] = useState('0');\n  let [valueMusic, setValueMusic] = useState(0);\n  let [valueSound, setValueSound] = useState('0');\n  let [musicOff, setMusicOff] = useState('x');\n  let [soundOff, setSoundOff] = useState('x');\n\n  function handleMusicClick(e) {\n    if (e.target.value !== e.target.min) {\n      setMusicOff('');\n    }\n    if (e.target.value === e.target.min) {\n      setMusicOff('x');\n      audioMusic.pause();\n    } else {\n      audioMusic.play();\n      audioMusic.volume = e.target.value / 10;\n    }\n  }\n\n  function handleSoundClick(e) {\n    if (e.target.value !== e.target.min) {\n      setSoundOff('');\n    }\n    if (e.target.value === e.target.min) {\n      setSoundOff('x');\n      setVolume(e.target.value / 10);\n      audioSound.pause();\n    } else if (e.target.value === e.target.max) {\n      audioSound.play();\n      setVolume(e.target.value / 10);\n    }\n    setVolume(e.target.value / 10);\n    audioSound.play();\n    audioSound.volume = e.target.value / 10;\n  }\n\n  // setting data to and getting from sessionStorage\n  useEffect(() => {\n    const dataMusicSoundSaved = JSON.parse(sessionStorage.getItem('dataMusicSound'));\n    if (dataMusicSoundSaved) {\n      setVolume(dataMusicSoundSaved.volumeSound);\n      setValueMusic(dataMusicSoundSaved.valueMusic);\n      setValueSound(dataMusicSoundSaved.valueSound);\n      setMusicOff(dataMusicSoundSaved.musicOff);\n      setSoundOff(dataMusicSoundSaved.soundOff);\n    }\n  }, []);\n\n  useEffect(() => {\n    const valuesToSave = {\n      volumeSound,\n      valueMusic,\n      valueSound,\n      musicOff,\n      soundOff \n    };\n    sessionStorage.setItem('dataMusicSound', JSON.stringify(valuesToSave));\n  })\n\n  return (\n    <div className=\"sounds-statistic\">\n      <div className=\"sound-control\">\n        <audio volume={valueMusic / 10} loop id=\"audio-music\" src={birds}></audio>\n        <p className='sound-control__music'>Music<span className=\"sound-control__Off\">{musicOff}</span></p>\n        <input id=\"range\" min=\"0\" max=\"10\" type=\"range\" value={valueMusic} name=\"range\" step=\"1\" onLoad={handleMusicClick} onClick={handleMusicClick} onChange={(e) => setValueMusic(valueMusic = e.target.value)}></input>\n\n\n        <audio id=\"audio-sound\" volume={volumeSound} src={sound}></audio>\n        <p className='sound-control__sound'>Sound<span className=\"sound-control__Off\">{soundOff}</span></p>\n        <input id=\"range\" min=\"0\" max=\"10\" type=\"range\" value={valueSound} name=\"range\" step=\"1\" onInput={(e) => setValueSound(valueSound = e.target.valueSound)} onClick={handleSoundClick} onChange={(e) => setValueSound(valueSound = e.target.valueSound)}></input>\n      </div>\n    </div>\n  );\n}\n\n\n  //class component\n//   import React from 'react';\n// import mozart from './mozart.mp3';\n\n// export default class SoundsMusic extends React.Component {\n//   constructor (props) {\n//     super(props);\n//     this.music = this.music.bind(this);\n//   }\n\n// music (e) {\n//     const audio = document.getElementById('audio');\n//     // const range = e.target;\n//     // audio.volume = audio.volume + 1;\n//     console.log(audio);\n//       if (e.target.value === e.target.min){\n//         audio.pause();\n//       } else if(e.target.value === e.target.max){\n//         audio.play();\n//       }\n//     }\n\n\n//   render (){\n//       return (\n//         <div className=\"sound-control\">\n//           <audio autoPlay loop id=\"audio\" controls src={ mozart }></audio>\n//           <input id=\"range\" min=\"0\" max=\"10\" type=\"range\" name=\"range\" step=\"1\" onChange={this.music}></input>\n//         </div>\n//       );\n//       }\n  // }\n\n","import React from 'react';\nimport './App.css';\nimport logo from './images/logo.svg';\nimport SoundsMusic from './SoundsMusic';\n\nclass App extends React.Component {\n  userState;\n  constructor(props) {\n    super(props);\n    this.timer = () => { };\n    this.theBestResult = 0;\n    this.displayStatistics = 'statistics-list';\n    this.statistics = [];\n    this.twoOpenedValue = []; //for accumulating and comparing opened cards\n    this.setTimer = 'No timer';\n    this.state = {\n      cardLimitation: 0, //limitation on opening cards, no more than 2\n      imageNumber: [],\n      progressGame: 'before start: cards not available',\n      remainingTime: 'No timer',\n      setNumberOfCards: '12',\n      backgroundColor: 'rgba(21, 126, 7, 0.61)',\n      countPairsOfOpenedCards: 1,  // number of opened card pairs\n      popapMessage: 'To start the game, click on the \"Start Game\"',\n      classActive: 'statistics-list_none'\n    }\n\n    this.startGame = this.startGame.bind(this);\n    this.timeToRemember = this.timeToRemember.bind(this);\n    this.openCloseCards = this.openCloseCards.bind(this);\n    this.timerOfGame = this.timerOfGame.bind(this);\n    this.chooseTimer = this.chooseTimer.bind(this);\n    this.chooseNumberOfCards = this.chooseNumberOfCards.bind(this);\n    this.setBackgroundColor = this.setBackgroundColor.bind(this);\n    this.hideExtraCards = this.hideExtraCards.bind(this);\n    this.finishGame = this.finishGame.bind(this);\n    this.fullscreen = this.fullscreen.bind(this);\n    this.showStatistics = this.showStatistics.bind(this);\n\n  }\n  componentDidMount() {\n    this.userState = JSON.parse(sessionStorage.getItem('userState'));\n    if (sessionStorage.getItem('userState')) {\n      this.setState({\n        cardLimitation: this.userState.cardLimitation, //limitation on opening cards, no more than 2\n        imageNumber: this.userState.imageNumber,\n        progressGame: this.userState.progressGame,\n        remainingTime: this.userState.remainingTime,\n        setNumberOfCards: this.userState.setNumberOfCards,\n        backgroundColor: this.userState.backgroundColor,\n        countPairsOfOpenedCards: this.userState.countPairsOfOpenedCards,  // number of opened card pairs\n        popapMessage: this.userState.popapMessage,\n        classActive: this.userState.classActive\n      })\n\n    } else {\n      this.setState({\n        cardLimitation: 0, //limitation on opening cards, no more than 2\n        imageNumber: [],\n        progressGame: 'before start: cards not available',\n        remainingTime: 'No timer',\n        setNumberOfCards: '12',\n        backgroundColor: 'rgba(21, 126, 7, 0.61)',\n        countPairsOfOpenedCards: 1,  // number of opened card pairs\n        popapMessage: 'To start the game, click on the \"Start Game\"',\n        classActive: 'statistics-list_none'\n      })\n    }\n    if (sessionStorage.getItem('theBestResult')) {\n      this.theBestResult = sessionStorage.getItem('theBestResult');\n    }\n    if (sessionStorage.getItem('timer')) {\n      this.timer = sessionStorage.getItem('timer');\n    }\n    if (sessionStorage.getItem('displayStatistics')) {\n      this.displayStatistics = sessionStorage.getItem('displayStatistics');\n    }\n    if (sessionStorage.getItem('twoOpenedValue')) {\n      this.twoOpenedValue = sessionStorage.getItem('twoOpenedValue').split(',');\n    }\n\n    if (sessionStorage.getItem('setTimer')) {\n      this.setTimer = sessionStorage.getItem('setTimer');\n    }\n\n    if (sessionStorage.getItem('statistics')) {\n      this.statistics = sessionStorage.getItem('statistics').split(',');\n    }\n  }\n\n  componentDidUpdate(nextProps, nextState) {\n    this.timerOfGame();\n    sessionStorage.setItem('userState', JSON.stringify(nextState));\n    sessionStorage.setItem('userProps', JSON.stringify(nextProps));\n    sessionStorage.setItem('theBestResult', this.theBestResult);\n    sessionStorage.setItem('displayStatistics', this.displayStatistics);\n    sessionStorage.setItem('statistics', this.statistics);\n    sessionStorage.setItem('twoOpenedValue', this.twoOpenedValue);\n    sessionStorage.setItem('setTimer', this.setTimer);\n    sessionStorage.setItem('timer', this.timer);\n  }\n\n  fullscreen() {\n    if (!document.fullscreenElement) {\n      document.documentElement.requestFullscreen();\n    } else if (document.exitFullscreen) {\n      document.exitFullscreen();\n    }\n  }\n\n  //сhoose timer settings\n  chooseTimer(e) {\n    if (this.state.progressGame === 'before start: cards not available') {\n      this.setTimer = e.target.getAttribute('data');\n      this.setState({\n        remainingTime: e.target.getAttribute('data')\n      })\n    }\n  }\n\n  //сhoose settings number of cards\n  chooseNumberOfCards(e) {\n    if (this.state.progressGame === 'before start: cards not available') {\n      this.setState({ setNumberOfCards: e.target.getAttribute('data') });\n    }\n  }\n\n  setBackgroundColor(e) {\n    console.log('this.state.progressGame', this.state.progressGame);\n    if (this.state.progressGame === 'before start: cards not available') {\n      this.setState({ backgroundColor: e.target.getAttribute('data') });\n\n    }\n    e.target.closest('.App').style.background = this.state.backgroundColor;\n  }\n\n  //user sees which timer button is pressed\n  isActiveButton(buttonId) {\n    return this.setTimer === buttonId ? 'clicked-timer' : '';\n  }\n\n  //user sees which number button is pressed\n  isActiveButtonNumber(buttonId) {\n    return this.state.setNumberOfCards === buttonId ? 'clicked-timer' : '';\n  }\n\n  //user sees which color was selected\n  isActiveButtonColor(buttonId) {\n    return this.state.backgroundColor === buttonId ? 'clicked-timer' : '';\n  }\n\n  //remove extra cards if option 12 is selected instead of 18\n  hideExtraCards() {\n    return {\n      display: this.state.setNumberOfCards === '12' ? 'none' : 'flex'\n    }\n  };\n\n  showStatistics() {\n    if (this.state.classActive === 'statistics-list_none') {\n      this.setState({\n        classActive: 'statistics-list',\n      })\n    } else\n      this.setState({\n        classActive: 'statistics-list_none',\n      })\n  }\n\n  //timer setting\n  timerOfGame(e) {\n    if (this.state.remainingTime === 'No timer') {\n      return;\n    }\n    if (this.state.progressGame === 'before start: cards not available') {\n      return;\n    }\n    clearInterval(this.timer);\n    this.timer = setInterval(() => {\n      if (!this.state.remainingTime) {\n        clearInterval(this.timer);\n        return false;\n      }\n      this.setState({\n        remainingTime: this.state.remainingTime - 1\n      });\n    }, 1000)\n  }\n\n  finishGame() {\n    this.setTimer = 'No timer';\n    this.setState({\n      cardLimitation: 0, //limitation on opening cards, no more than 2\n      imageNumber: [],\n      progressGame: 'before start: cards not available',\n      remainingTime: this.setTimer,\n      setNumberOfCards: '12',\n      backgroundColor: 'rgba(21, 126, 7, 0.61)',\n      countPairsOfOpenedCards: 1,  // number of opened card pairs\n      popapMessage: 'To start the game, click on the \"Start Game\"',\n    })\n  }\n\n  // the layout of the cards when you click the \"Start game\" button\n  startGame(e) {\n    if (this.state.progressGame !== 'user is playing') {\n      let arrayOfImageNumber = [];\n      let number = this.state.setNumberOfCards;\n      for (let k = 1; k <= number; k++) {\n        arrayOfImageNumber.push(k);\n      }\n      this.shuffle(arrayOfImageNumber, number);\n      this.timeToRemember(arrayOfImageNumber);\n    }\n  }\n\n  // Fisher-Yates Shuffle\n  shuffle(arrayOfImageNumber, number) {\n    for (let i = arrayOfImageNumber.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [arrayOfImageNumber[i], arrayOfImageNumber[j]] = [arrayOfImageNumber[j], arrayOfImageNumber[i]];\n      arrayOfImageNumber[i] = arrayOfImageNumber[i] > number / 2 ? arrayOfImageNumber.length + 1 - arrayOfImageNumber[i] : arrayOfImageNumber[i];\n    }\n    arrayOfImageNumber[0] = arrayOfImageNumber[0] > number / 2 ? (arrayOfImageNumber.length + 1 - arrayOfImageNumber[0]) : arrayOfImageNumber[0];\n    this.setState({\n      imageNumber: arrayOfImageNumber,\n      progressGame: 'user is playing',\n    });\n  }\n\n  timeToRemember(arrayOfImageNumber) {\n    setTimeout(() => {\n      for (let i = 0; i < arrayOfImageNumber.length; i++) {\n        arrayOfImageNumber[i] = arrayOfImageNumber[i] + 'closed';\n      }\n      this.setState({\n        imageNumber: arrayOfImageNumber,\n      });\n      this.timerOfGame();\n    }, 4000);\n  }\n\n  openCloseCards(e) {\n    if (this.state.remainingTime !== 0 || this.state.remainingTime === 'No timer') {\n      if (this.state.progressGame === 'user is playing') {\n        if (this.state.cardLimitation === 0) {\n          this.twoOpenedValue = [];\n        }\n        if (this.state.cardLimitation < 2) {\n          let index = e.target.getAttribute('data-index');\n          let value = parseInt(this.state.imageNumber[index]);\n          this.twoOpenedValue.push(value);\n          this.setState({\n            imageNumber: {\n              ...this.state.imageNumber,\n              [index]: value,\n            },\n            cardLimitation: this.state.cardLimitation + 1,\n          })\n          // if two open cards are equal\n          if (this.twoOpenedValue.length === 2) {\n            if (this.twoOpenedValue[0] === this.twoOpenedValue[1]) {\n              this.twoOpenedValue = [];\n              this.setState({\n                countPairsOfOpenedCards: this.state.countPairsOfOpenedCards + 1,\n                cardLimitation: 0,\n              });\n\n              if (this.state.countPairsOfOpenedCards === this.state.setNumberOfCards / 2) {\n                this.statistics.push((this.setTimer - this.state.remainingTime));\n                if (this.statistics.length > 10) {\n                  this.statistics.shift();\n                }\n                this.theBestResult = Math.min(...(this.statistics.filter(item => typeof item === 'number')));\n                this.setTimer = 'No timer';\n                setTimeout(() =>\n                  this.setState({\n                    progressGame: 'before start: cards not available',\n                    popapMessage: 'To start the new game, click on the \"Start Game\"',\n                    imageNumber: [],\n                    countPairsOfOpenedCards: 1,\n                    remainingTime: 'No timer',\n                  }), 3000);\n\n                this.setState({\n                  progressGame: 'before start: cards not available',\n                  popapMessage: 'Excellent. You won',\n                  remainingTime: this.setTimer,\n                })\n              }\n            } else {\n              // if two open cards are NOT equal, you need to hide them again\n              setTimeout(() => {\n                for (let imageNumber in this.state.imageNumber) {\n                  const valueImageNumber = this.state.imageNumber[imageNumber];\n\n                  this.setState({\n                    imageNumber: {\n                      ...this.state.imageNumber,\n                      [imageNumber]: valueImageNumber === this.twoOpenedValue[0] || valueImageNumber === this.twoOpenedValue[1] ? this.state.imageNumber[imageNumber] + 'closed' : this.state.imageNumber[imageNumber]\n                    },\n                    cardLimitation: 0,\n                  })\n                }\n                console.log('должно удалиться')\n                this.twoOpenedValue = [];\n              }, 500);\n            }\n          }\n        }\n      }\n    } else if (this.state.remainingTime === 0) {\n      console.log('remainingTime losing', this.state.remainingTime);\n      this.statistics.push('losing');\n      if (this.statistics.length > 10) {\n        this.statistics.shift();\n      }\n      this.theBestResult = Math.min(...(this.statistics.filter(item => typeof item === 'number')));\n      this.setTimer = 'No timer';\n      this.setState({\n        remainingTime: 'No timer',\n        progressGame: 'before start: cards not available',\n        popapMessage: 'Unfortunately, you did not meet the deadline',\n      })\n      setTimeout(() =>\n        this.setState({\n          popapMessage: 'But you can try again, click on the \"Start Game\"',\n          imageNumber: [],\n          countPairsOfOpenedCards: 1,\n        }), 3000);\n    }\n  }\n\n  addClassNotAvailable() {\n    return (this.state.progressGame === 'before start: cards not available' ? \" not-available\" : '');\n  }\n\n  clickApp() {\n    const audioSound = document.getElementById('audio-sound');\n    audioSound.volume = audioSound.getAttribute('volume');\n    audioSound.pause();\n    audioSound.load();\n    audioSound.play();\n  }\n\n  render() {\n    return (\n      <div className=\"App\" style={{ background: this.state.backgroundColor }} onClick={this.clickApp}>\n        <div className=\"app-top\">\n          <div className=\"game-buttons\">\n            <button className=\"fullscreen\" onClick={this.fullscreen}>fullscreen</button>\n            <button className=\"button-start\" onClick={this.startGame}>Start game</button>\n            <button className=\"button-finish\" onClick={this.finishGame}>Finish game</button>\n          </div>\n          <div className={\"popap\" + (this.state.progressGame !== 'before start: cards not available' ? \" disappearance\" : \"\")}>\n            {this.state.popapMessage}\n          </div>\n          <div className=\"customization\">\n            <div className=\"customization__top\">\n              <p className=\"customization-score\">Score<span>{this.state.countPairsOfOpenedCards - 1}</span></p>\n              <p className=\"customization_title\">Game settings</p>\n              <div className=\"statistics\">\n                <button className=\"statistics__button\" onClick={this.showStatistics}>Statistics</button>\n                <div className={this.state.classActive}>\n                  <p className=\"statistics__p\">The best<span className=\"statistics__best\">{this.theBestResult}</span> seconds</p>\n                  <ol>\n                    <li>{this.statistics[0]}</li>\n                    <li>{this.statistics[1]}</li>\n                    <li>{this.statistics[2]}</li>\n                    <li>{this.statistics[3]}</li>\n                    <li>{this.statistics[4]}</li>\n                    <li>{this.statistics[5]}</li>\n                    <li>{this.statistics[6]}</li>\n                    <li>{this.statistics[7]}</li>\n                    <li>{this.statistics[8]}</li>\n                    <li>{this.statistics[9]}</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n            <div className=\"settings\">\n              <div className=\"timer-game\">\n                <p className=\"customization__settings\">Timer: <span>{this.state.remainingTime}</span></p>\n                <button data='No timer' className={this.isActiveButton('No timer')} onClick={this.chooseTimer}>No timer</button>\n                <button data=\"30\" className={this.isActiveButton('30')} onClick={this.chooseTimer}>30 seconds</button>\n                <button data=\"60\" className={this.isActiveButton('60')} onClick={this.chooseTimer}>60 seconds</button>\n              </div>\n              <div>\n                <p className=\"customization__settings\">Number of cards</p>\n                <button data=\"12\" className={this.isActiveButtonNumber('12')} onClick={this.chooseNumberOfCards}>12</button>\n                <button data=\"18\" className={this.isActiveButtonNumber('18')} onClick={this.chooseNumberOfCards}>18</button>\n              </div>\n              <div>\n                <p className=\"customization__settings\">Background color</p>\n                <button data=\"rgba(21, 126, 7, 0.61)\" className={this.isActiveButtonColor('rgba(21, 126, 7, 0.61)')} onClick={this.setBackgroundColor}>Green</button>\n\n                <button data=\"white\" className={this.isActiveButtonColor('white')} onClick={this.setBackgroundColor}>White</button>\n              </div>\n            </div>\n            <SoundsMusic />\n          </div>\n        </div>\n        <div className=\"block block-1\">\n          <div className={\"image image\" + this.state.imageNumber[0] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"0\"></div>\n          <div className={\"image image\" + this.state.imageNumber[1] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"1\"></div>\n          <div className={\"image image\" + this.state.imageNumber[2] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"2\"></div>\n          <div className={\"image image\" + this.state.imageNumber[3] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"3\"></div>\n          <div className={\"image image\" + this.state.imageNumber[4] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"4\"></div>\n          <div className={\"image image\" + this.state.imageNumber[5] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"5\"></div>\n        </div>\n        <div className=\"block block-2\">\n          <div className={\"image image\" + this.state.imageNumber[6] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"6\"></div>\n          <div className={\"image image\" + this.state.imageNumber[7] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"7\"></div>\n          <div className={\"image image\" + this.state.imageNumber[8] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"8\"></div>\n          <div className={\"image image\" + this.state.imageNumber[9] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"9\"></div>\n          <div className={\"image image\" + this.state.imageNumber[10] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"10\"></div>\n          <div className={\"image image\" + this.state.imageNumber[11] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"11\"></div>\n        </div>\n        <div className=\"block block-3\" style={this.hideExtraCards()}>\n          <div className={\"image image\" + this.state.imageNumber[12] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"12\"></div>\n          <div className={\"image image\" + this.state.imageNumber[13] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"13\"></div>\n          <div className={\"image image\" + this.state.imageNumber[14] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"14\"></div>\n          <div className={\"image image\" + this.state.imageNumber[15] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"15\"></div>\n          <div className={\"image image\" + this.state.imageNumber[16] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"16\"></div>\n          <div className={\"image image\" + this.state.imageNumber[17] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"17\"></div>\n        </div>\n        <footer>\n          <p className=\"footer__title\">\n            By <a href=\"https://github.com/MarinaYur\">Marina Yurkevich</a>, 2021\n          </p>\n          <a className=\"footer__logo\" href=\"https://rs.school/js/\">\n            <img src={logo} alt=\"logo\"></img>\n          </a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}