{"ast":null,"code":"var _jsxFileName = \"/Users/marina.yur/projects/react-game/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport logo from \"./images/logo.svg\";\nimport SoundsMusic from './SoundsMusic'; // import Statistics from './Statistics';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.timer = () => {};\n\n    this.theBestResult = 0;\n    this.displayStatistics = 'statistics-list';\n    this.statistics = [];\n    this.twoOpenedValue = []; //for accumulating and comparing opened cards\n\n    this.setTimer = 'No timer';\n    this.state = {\n      cardLimitation: 0,\n      //limitation on opening cards, no more than 2\n      imageNumber: [],\n      progressGame: 'before start: cards not available',\n      remainingTime: 'No timer',\n      setNumberOfCards: '12',\n      backgroundColor: 'rgba(21, 126, 7, 0.61)',\n      countPairsOfOpenedCards: 1,\n      // number of opened card pairs\n      popapMessage: 'To start the game, click on the \"Start Game\"',\n      classActive: 'statistics-list_none'\n    };\n    this.startGame = this.startGame.bind(this);\n    this.timeToRemember = this.timeToRemember.bind(this);\n    this.openCloseCards = this.openCloseCards.bind(this);\n    this.timerOfGame = this.timerOfGame.bind(this);\n    this.chooseTimer = this.chooseTimer.bind(this);\n    this.chooseNumberOfCards = this.chooseNumberOfCards.bind(this);\n    this.setBackgroundColor = this.setBackgroundColor.bind(this);\n    this.hideExtraCards = this.hideExtraCards.bind(this);\n    this.finishGame = this.finishGame.bind(this);\n    this.fullscreen = this.fullscreen.bind(this);\n    this.showStatistics = this.showStatistics.bind(this);\n  }\n\n  componentDidMount() {\n    this.userState = JSON.parse(sessionStorage.getItem('userState'));\n\n    if (sessionStorage.getItem('userState')) {\n      this.setState({\n        cardLimitation: this.userState.cardLimitation,\n        //limitation on opening cards, no more than 2\n        imageNumber: this.userState.imageNumber,\n        progressGame: this.userState.progressGame,\n        remainingTime: this.userState.remainingTime,\n        setNumberOfCards: this.userState.setNumberOfCards,\n        backgroundColor: this.userState.backgroundColor,\n        countPairsOfOpenedCards: this.userState.countPairsOfOpenedCards,\n        // number of opened card pairs\n        popapMessage: this.userState.popapMessage,\n        classActive: this.userState.classActive\n      });\n    } else {\n      this.setState({\n        cardLimitation: 0,\n        //limitation on opening cards, no more than 2\n        imageNumber: [],\n        progressGame: 'before start: cards not available',\n        remainingTime: 'No timer',\n        setNumberOfCards: '12',\n        backgroundColor: 'rgba(21, 126, 7, 0.61)',\n        countPairsOfOpenedCards: 1,\n        // number of opened card pairs\n        popapMessage: 'To start the game, click on the \"Start Game\"',\n        classActive: 'statistics-list_none'\n      });\n    }\n\n    if (sessionStorage.getItem('theBestResult')) {\n      this.theBestResult = sessionStorage.getItem('theBestResult');\n    }\n\n    if (sessionStorage.getItem('timer')) {\n      this.timer = sessionStorage.getItem('timer');\n    }\n\n    if (sessionStorage.getItem('displayStatistics')) {\n      this.displayStatistics = sessionStorage.getItem('displayStatistics');\n    }\n\n    if (sessionStorage.getItem('twoOpenedValue')) {\n      this.twoOpenedValue = sessionStorage.getItem('twoOpenedValue').split(','); // if (this.twoOpenedValue.length >= 2)\n      // this.twoOpenedValue = [];\n      // this.openCloseCards();\n    }\n\n    if (sessionStorage.getItem('setTimer')) {\n      this.setTimer = sessionStorage.getItem('setTimer');\n    }\n\n    if (sessionStorage.getItem('statistics')) {\n      this.statistics = sessionStorage.getItem('statistics').split(',');\n    }\n\n    console.log('this.statistics', this.statistics); // console.log('this.userProps', this.userProps);\n  }\n\n  componentDidUpdate(nextProps, nextState) {\n    this.timerOfGame();\n    console.log('this.timer Update', this.timer);\n    sessionStorage.setItem('userState', JSON.stringify(nextState));\n    sessionStorage.setItem('userProps', JSON.stringify(nextProps));\n    sessionStorage.setItem('theBestResult', this.theBestResult);\n    sessionStorage.setItem('displayStatistics', this.displayStatistics);\n    sessionStorage.setItem('statistics', this.statistics);\n    sessionStorage.setItem('twoOpenedValue', this.twoOpenedValue);\n    sessionStorage.setItem('setTimer', this.setTimer);\n    sessionStorage.setItem('timer', this.timer);\n  }\n\n  fullscreen() {\n    if (!document.fullscreenElement) {\n      document.documentElement.requestFullscreen();\n    } else if (document.exitFullscreen) {\n      document.exitFullscreen();\n    }\n  } //сhoose timer settings\n\n\n  chooseTimer(e) {\n    if (this.state.progressGame === 'before start: cards not available') {\n      this.setTimer = e.target.getAttribute('data');\n      this.setState({\n        remainingTime: e.target.getAttribute('data')\n      });\n    }\n  } //сhoose settings number of cards\n\n\n  chooseNumberOfCards(e) {\n    if (this.state.progressGame === 'before start: cards not available') {\n      this.setState({\n        setNumberOfCards: e.target.getAttribute('data')\n      });\n    }\n  }\n\n  setBackgroundColor(e) {\n    console.log('this.state.progressGame', this.state.progressGame);\n\n    if (this.state.progressGame === 'before start: cards not available') {\n      this.setState({\n        backgroundColor: e.target.getAttribute('data')\n      });\n    }\n\n    e.target.closest('.App').style.background = this.state.backgroundColor;\n  } //user sees which timer button is pressed\n\n\n  isActiveButton(buttonId) {\n    return this.setTimer === buttonId ? 'clicked-timer' : '';\n  } //user sees which number button is pressed\n\n\n  isActiveButtonNumber(buttonId) {\n    return this.state.setNumberOfCards === buttonId ? 'clicked-timer' : '';\n  } //user sees which color was selected\n\n\n  isActiveButtonColor(buttonId) {\n    return this.state.backgroundColor === buttonId ? 'clicked-timer' : '';\n  } //remove extra cards if option 12 is selected instead of 18\n\n\n  hideExtraCards() {\n    return {\n      display: this.state.setNumberOfCards === '12' ? 'none' : 'flex'\n    };\n  }\n\n  showStatistics() {\n    if (this.state.classActive === 'statistics-list_none') {\n      this.setState({\n        classActive: 'statistics-list'\n      });\n    } else this.setState({\n      classActive: 'statistics-list_none'\n    });\n  } //timer setting\n\n\n  timerOfGame(e) {\n    if (this.state.remainingTime === 'No timer') {\n      return;\n    }\n\n    if (this.state.progressGame === 'before start: cards not available') {\n      return;\n    }\n\n    clearInterval(this.timer);\n    this.timer = setInterval(() => {\n      if (!this.state.remainingTime) {\n        clearInterval(this.timer);\n        return false;\n      }\n\n      this.setState({\n        remainingTime: this.state.remainingTime - 1\n      });\n    }, 1000);\n  }\n\n  finishGame() {\n    this.setTimer = 'No timer';\n    this.setState({\n      cardLimitation: 0,\n      //limitation on opening cards, no more than 2\n      imageNumber: [],\n      progressGame: 'before start: cards not available',\n      remainingTime: this.setTimer,\n      setNumberOfCards: '12',\n      backgroundColor: 'rgba(21, 126, 7, 0.61)',\n      countPairsOfOpenedCards: 1,\n      // number of opened card pairs\n      popapMessage: 'To start the game, click on the \"Start Game\"'\n    });\n    console.log('this.state.progressGame', this.state.progressGame, this.state.remainingTime);\n  } // the layout of the cards when you click the \"Start game\" button\n\n\n  startGame(e) {\n    if (this.state.progressGame !== 'user is playing') {\n      let arrayOfImageNumber = [];\n      let number = this.state.setNumberOfCards;\n\n      for (let k = 1; k <= number; k++) {\n        arrayOfImageNumber.push(k);\n      }\n\n      this.shuffle(arrayOfImageNumber, number);\n      this.timeToRemember(arrayOfImageNumber);\n    }\n  } // Fisher-Yates Shuffle\n\n\n  shuffle(arrayOfImageNumber, number) {\n    for (let i = arrayOfImageNumber.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [arrayOfImageNumber[i], arrayOfImageNumber[j]] = [arrayOfImageNumber[j], arrayOfImageNumber[i]];\n      arrayOfImageNumber[i] = arrayOfImageNumber[i] > number / 2 ? arrayOfImageNumber.length + 1 - arrayOfImageNumber[i] : arrayOfImageNumber[i];\n    }\n\n    arrayOfImageNumber[0] = arrayOfImageNumber[0] > number / 2 ? arrayOfImageNumber.length + 1 - arrayOfImageNumber[0] : arrayOfImageNumber[0];\n    this.setState({\n      imageNumber: arrayOfImageNumber,\n      progressGame: 'user is playing'\n    });\n  }\n\n  timeToRemember(arrayOfImageNumber) {\n    setTimeout(() => {\n      for (let i = 0; i < arrayOfImageNumber.length; i++) {\n        arrayOfImageNumber[i] = arrayOfImageNumber[i] + 'closed';\n      }\n\n      this.setState({\n        imageNumber: arrayOfImageNumber\n      });\n      this.timerOfGame();\n    }, 4000);\n  }\n\n  openCloseCards(e) {\n    if (this.state.remainingTime !== 0 || this.state.remainingTime === 'No timer') {\n      if (this.state.progressGame === 'user is playing') {\n        if (this.state.cardLimitation === 0) {\n          this.twoOpenedValue = [];\n        }\n\n        if (this.state.cardLimitation < 2) {\n          let index = e.target.getAttribute('data-index');\n          let value = parseInt(this.state.imageNumber[index]);\n          this.twoOpenedValue.push(value);\n          this.setState({\n            imageNumber: { ...this.state.imageNumber,\n              [index]: value\n            },\n            cardLimitation: this.state.cardLimitation + 1\n          }); // if two open cards are equal\n\n          if (this.twoOpenedValue.length === 2) {\n            if (this.twoOpenedValue[0] === this.twoOpenedValue[1]) {\n              this.twoOpenedValue = [];\n              this.setState({\n                countPairsOfOpenedCards: this.state.countPairsOfOpenedCards + 1,\n                cardLimitation: 0\n              });\n\n              if (this.state.countPairsOfOpenedCards === this.state.setNumberOfCards / 2) {\n                this.statistics.push(this.setTimer - this.state.remainingTime);\n\n                if (this.statistics.length > 10) {\n                  this.statistics.shift();\n                }\n\n                this.theBestResult = Math.min(...this.statistics.filter(item => typeof item === 'number'));\n                this.setTimer = 'No timer';\n                setTimeout(() => this.setState({\n                  progressGame: 'before start: cards not available',\n                  popapMessage: 'To start the new game, click on the \"Start Game\"',\n                  imageNumber: [],\n                  countPairsOfOpenedCards: 1,\n                  remainingTime: 'No timer'\n                }), 3000);\n                this.setState({\n                  progressGame: 'before start: cards not available',\n                  popapMessage: 'Excellent. You won',\n                  remainingTime: this.setTimer\n                });\n              }\n            } else {\n              // if two open cards are NOT equal, you need to hide them again\n              setTimeout(() => {\n                for (let imageNumber in this.state.imageNumber) {\n                  const valueImageNumber = this.state.imageNumber[imageNumber];\n                  this.setState({\n                    imageNumber: { ...this.state.imageNumber,\n                      [imageNumber]: valueImageNumber === this.twoOpenedValue[0] || valueImageNumber === this.twoOpenedValue[1] ? this.state.imageNumber[imageNumber] + 'closed' : this.state.imageNumber[imageNumber]\n                    },\n                    cardLimitation: 0\n                  });\n                }\n\n                console.log('должно удалиться');\n                this.twoOpenedValue = [];\n              }, 500);\n            }\n          }\n        }\n      }\n    } else if (this.state.remainingTime === 0) {\n      console.log('remainingTime losing', this.state.remainingTime);\n      this.statistics.push('losing');\n\n      if (this.statistics.length > 10) {\n        this.statistics.shift();\n      }\n\n      this.theBestResult = Math.min(...this.statistics.filter(item => typeof item === 'number'));\n      this.setTimer = 'No timer';\n      this.setState({\n        remainingTime: 'No timer',\n        progressGame: 'before start: cards not available',\n        popapMessage: 'Unfortunately, you did not meet the deadline'\n      });\n      setTimeout(() => this.setState({\n        popapMessage: 'But you can try again, click on the \"Start Game\"',\n        imageNumber: [],\n        countPairsOfOpenedCards: 1\n      }), 3000);\n    }\n  }\n\n  addClassNotAvailable() {\n    return this.state.progressGame === 'before start: cards not available' ? \" not-available\" : '';\n  }\n\n  clickApp() {\n    const audioSound = document.getElementById('audio-sound');\n    audioSound.volume = audioSound.getAttribute('volume');\n    audioSound.pause();\n    audioSound.load();\n    audioSound.play();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      style: {\n        background: this.state.backgroundColor\n      },\n      onClick: this.clickApp,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"fullscreen\",\n            onClick: this.fullscreen,\n            children: \"fullscreen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-start\",\n            onClick: this.startGame,\n            children: \"Start game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-finish\",\n            onClick: this.finishGame,\n            children: \"Finish game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popap\" + (this.state.progressGame !== 'before start: cards not available' ? \" disappearance\" : \"\"),\n          children: this.state.popapMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"customization\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"customization__top\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"customization-score\",\n              children: [\"Score\", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: this.state.countPairsOfOpenedCards - 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 55\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"customization_title\",\n              children: \"Game settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"statistics\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"statistics__button\",\n                onClick: this.showStatistics,\n                children: \"Statistics\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: this.state.classActive,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"statistics__p\",\n                  children: [\"The best\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"statistics__best\",\n                    children: this.theBestResult\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 56\n                  }, this), \" seconds\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: this.statistics[0]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: this.statistics[1]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: this.statistics[2]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: this.statistics[3]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: this.statistics[4]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: this.statistics[5]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: this.statistics[6]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: this.statistics[7]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: this.statistics[8]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: this.statistics[9]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timer-game\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"customization__settings\",\n                children: [\"Timer: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: this.state.remainingTime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 63\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                data: \"No timer\",\n                className: this.isActiveButton('No timer'),\n                onClick: this.chooseTimer,\n                children: \"No timer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                data: \"30\",\n                className: this.isActiveButton('30'),\n                onClick: this.chooseTimer,\n                children: \"30 seconds\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                data: \"60\",\n                className: this.isActiveButton('60'),\n                onClick: this.chooseTimer,\n                children: \"60 seconds\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"customization__settings\",\n                children: \"Number of cards\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                data: \"12\",\n                className: this.isActiveButtonNumber('12'),\n                onClick: this.chooseNumberOfCards,\n                children: \"12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                data: \"18\",\n                className: this.isActiveButtonNumber('18'),\n                onClick: this.chooseNumberOfCards,\n                children: \"18\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"customization__settings\",\n                children: \"Background color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                data: \"rgba(21, 126, 7, 0.61)\",\n                className: this.isActiveButtonColor('rgba(21, 126, 7, 0.61)'),\n                onClick: this.setBackgroundColor,\n                children: \"Green\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                data: \"white\",\n                className: this.isActiveButtonColor('white'),\n                onClick: this.setBackgroundColor,\n                children: \"White\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SoundsMusic, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block block-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image image\" + this.state.imageNumber[0] + \" \" + this.addClassNotAvailable(),\n          onClick: this.openCloseCards,\n          \"data-index\": \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image image\" + this.state.imageNumber[1] + \" \" + this.addClassNotAvailable(),\n          onClick: this.openCloseCards,\n          \"data-index\": \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image image\" + this.state.imageNumber[2] + \" \" + this.addClassNotAvailable(),\n          onClick: this.openCloseCards,\n          \"data-index\": \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image image\" + this.state.imageNumber[3] + \" \" + this.addClassNotAvailable(),\n          onClick: this.openCloseCards,\n          \"data-index\": \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image image\" + this.state.imageNumber[4] + \" \" + this.addClassNotAvailable(),\n          onClick: this.openCloseCards,\n          \"data-index\": \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image image\" + this.state.imageNumber[5] + \" \" + this.addClassNotAvailable(),\n          onClick: this.openCloseCards,\n          \"data-index\": \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block block-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image image\" + this.state.imageNumber[6] + \" \" + this.addClassNotAvailable(),\n          onClick: this.openCloseCards,\n          \"data-index\": \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image image\" + this.state.imageNumber[7] + \" \" + this.addClassNotAvailable(),\n          onClick: this.openCloseCards,\n          \"data-index\": \"7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image image\" + this.state.imageNumber[8] + \" \" + this.addClassNotAvailable(),\n          onClick: this.openCloseCards,\n          \"data-index\": \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image image\" + this.state.imageNumber[9] + \" \" + this.addClassNotAvailable(),\n          onClick: this.openCloseCards,\n          \"data-index\": \"9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image image\" + this.state.imageNumber[10] + \" \" + this.addClassNotAvailable(),\n          onClick: this.openCloseCards,\n          \"data-index\": \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image image\" + this.state.imageNumber[11] + \" \" + this.addClassNotAvailable(),\n          onClick: this.openCloseCards,\n          \"data-index\": \"11\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block block-3\",\n        style: this.hideExtraCards(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image image\" + this.state.imageNumber[12] + \" \" + this.addClassNotAvailable(),\n          onClick: this.openCloseCards,\n          \"data-index\": \"12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image image\" + this.state.imageNumber[13] + \" \" + this.addClassNotAvailable(),\n          onClick: this.openCloseCards,\n          \"data-index\": \"13\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image image\" + this.state.imageNumber[14] + \" \" + this.addClassNotAvailable(),\n          onClick: this.openCloseCards,\n          \"data-index\": \"14\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image image\" + this.state.imageNumber[15] + \" \" + this.addClassNotAvailable(),\n          onClick: this.openCloseCards,\n          \"data-index\": \"15\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image image\" + this.state.imageNumber[16] + \" \" + this.addClassNotAvailable(),\n          onClick: this.openCloseCards,\n          \"data-index\": \"16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image image\" + this.state.imageNumber[17] + \" \" + this.addClassNotAvailable(),\n          onClick: this.openCloseCards,\n          \"data-index\": \"17\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"footer__title\",\n          children: [\"By \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://github.com/MarinaYur\",\n            children: \"Marina Yurkevich\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 16\n          }, this), \", 2021\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer__logo\",\n          href: \"https://rs.school/js/\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/marina.yur/projects/react-game/src/App.js"],"names":["React","SoundsMusic","App","Component","constructor","props","timer","theBestResult","displayStatistics","statistics","twoOpenedValue","setTimer","state","cardLimitation","imageNumber","progressGame","remainingTime","setNumberOfCards","backgroundColor","countPairsOfOpenedCards","popapMessage","classActive","startGame","bind","timeToRemember","openCloseCards","timerOfGame","chooseTimer","chooseNumberOfCards","setBackgroundColor","hideExtraCards","finishGame","fullscreen","showStatistics","componentDidMount","userState","JSON","parse","sessionStorage","getItem","setState","split","console","log","componentDidUpdate","nextProps","nextState","setItem","stringify","document","fullscreenElement","documentElement","requestFullscreen","exitFullscreen","e","target","getAttribute","closest","style","background","isActiveButton","buttonId","isActiveButtonNumber","isActiveButtonColor","display","clearInterval","setInterval","arrayOfImageNumber","number","k","push","shuffle","i","length","j","Math","floor","random","setTimeout","index","value","parseInt","shift","min","filter","item","valueImageNumber","addClassNotAvailable","clickApp","audioSound","getElementById","volume","pause","load","play","render","logo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport logo from './images/logo.svg';\nimport SoundsMusic from './SoundsMusic';\n// import Statistics from './Statistics';\n\n\nclass App extends React.Component {\n  userState;\n  constructor(props) {\n    super(props);\n    this.timer = () => { };\n    this.theBestResult = 0;\n    this.displayStatistics = 'statistics-list';\n    this.statistics = [];\n    this.twoOpenedValue = []; //for accumulating and comparing opened cards\n    this.setTimer = 'No timer';\n    this.state = {\n      cardLimitation: 0, //limitation on opening cards, no more than 2\n      imageNumber: [],\n      progressGame: 'before start: cards not available',\n      remainingTime: 'No timer',\n      setNumberOfCards: '12',\n      backgroundColor: 'rgba(21, 126, 7, 0.61)',\n      countPairsOfOpenedCards: 1,  // number of opened card pairs\n      popapMessage: 'To start the game, click on the \"Start Game\"',\n      classActive: 'statistics-list_none'\n    }\n\n    this.startGame = this.startGame.bind(this);\n    this.timeToRemember = this.timeToRemember.bind(this);\n    this.openCloseCards = this.openCloseCards.bind(this);\n    this.timerOfGame = this.timerOfGame.bind(this);\n    this.chooseTimer = this.chooseTimer.bind(this);\n    this.chooseNumberOfCards = this.chooseNumberOfCards.bind(this);\n    this.setBackgroundColor = this.setBackgroundColor.bind(this);\n    this.hideExtraCards = this.hideExtraCards.bind(this);\n    this.finishGame = this.finishGame.bind(this);\n    this.fullscreen = this.fullscreen.bind(this);\n    this.showStatistics = this.showStatistics.bind(this);\n\n  }\n  componentDidMount() {\n    this.userState = JSON.parse(sessionStorage.getItem('userState'));\n\n    if (sessionStorage.getItem('userState')) {\n      this.setState({\n        cardLimitation: this.userState.cardLimitation, //limitation on opening cards, no more than 2\n        imageNumber: this.userState.imageNumber,\n        progressGame: this.userState.progressGame,\n        remainingTime: this.userState.remainingTime,\n        setNumberOfCards: this.userState.setNumberOfCards,\n        backgroundColor: this.userState.backgroundColor,\n        countPairsOfOpenedCards: this.userState.countPairsOfOpenedCards,  // number of opened card pairs\n        popapMessage: this.userState.popapMessage,\n        classActive: this.userState.classActive\n      })\n\n    } else {\n      this.setState({\n        cardLimitation: 0, //limitation on opening cards, no more than 2\n        imageNumber: [],\n        progressGame: 'before start: cards not available',\n        remainingTime: 'No timer',\n        setNumberOfCards: '12',\n        backgroundColor: 'rgba(21, 126, 7, 0.61)',\n        countPairsOfOpenedCards: 1,  // number of opened card pairs\n        popapMessage: 'To start the game, click on the \"Start Game\"',\n        classActive: 'statistics-list_none'\n      })\n    }\n    if (sessionStorage.getItem('theBestResult')) {\n      this.theBestResult = sessionStorage.getItem('theBestResult');\n    }\n    if (sessionStorage.getItem('timer')) {\n      this.timer = sessionStorage.getItem('timer');\n    }\n    if (sessionStorage.getItem('displayStatistics')) {\n      this.displayStatistics = sessionStorage.getItem('displayStatistics');\n    }\n    if (sessionStorage.getItem('twoOpenedValue')) {\n      this.twoOpenedValue = sessionStorage.getItem('twoOpenedValue').split(',');\n      // if (this.twoOpenedValue.length >= 2)\n      // this.twoOpenedValue = [];\n      // this.openCloseCards();\n    }\n\n    if (sessionStorage.getItem('setTimer')) {\n      this.setTimer = sessionStorage.getItem('setTimer');\n    }\n\n    if (sessionStorage.getItem('statistics')) {\n      this.statistics = sessionStorage.getItem('statistics').split(',');\n    }\n\n\n    console.log('this.statistics', this.statistics);\n    // console.log('this.userProps', this.userProps);\n  }\n\n\n  componentDidUpdate(nextProps, nextState) {\n    this.timerOfGame();\n    console.log('this.timer Update', this.timer);\n    sessionStorage.setItem('userState', JSON.stringify(nextState));\n    sessionStorage.setItem('userProps', JSON.stringify(nextProps));\n\n    sessionStorage.setItem('theBestResult', this.theBestResult);\n    sessionStorage.setItem('displayStatistics', this.displayStatistics);\n    sessionStorage.setItem('statistics', this.statistics);\n    sessionStorage.setItem('twoOpenedValue', this.twoOpenedValue);\n    sessionStorage.setItem('setTimer', this.setTimer);\n    sessionStorage.setItem('timer', this.timer);\n  }\n\n\n  fullscreen() {\n    if (!document.fullscreenElement) {\n      document.documentElement.requestFullscreen();\n    } else if (document.exitFullscreen) {\n      document.exitFullscreen();\n    }\n  }\n\n  //сhoose timer settings\n  chooseTimer(e) {\n    if (this.state.progressGame === 'before start: cards not available') {\n      this.setTimer = e.target.getAttribute('data');\n      this.setState({\n        remainingTime: e.target.getAttribute('data')\n      })\n    }\n  }\n\n  //сhoose settings number of cards\n  chooseNumberOfCards(e) {\n    if (this.state.progressGame === 'before start: cards not available') {\n      this.setState({ setNumberOfCards: e.target.getAttribute('data') });\n    }\n  }\n\n  setBackgroundColor(e) {\n    console.log('this.state.progressGame', this.state.progressGame);\n    if (this.state.progressGame === 'before start: cards not available') {\n      this.setState({ backgroundColor: e.target.getAttribute('data') });\n\n    }\n    e.target.closest('.App').style.background = this.state.backgroundColor;\n  }\n\n  //user sees which timer button is pressed\n  isActiveButton(buttonId) {\n    return this.setTimer === buttonId ? 'clicked-timer' : '';\n  }\n\n  //user sees which number button is pressed\n  isActiveButtonNumber(buttonId) {\n    return this.state.setNumberOfCards === buttonId ? 'clicked-timer' : '';\n  }\n\n  //user sees which color was selected\n  isActiveButtonColor(buttonId) {\n    return this.state.backgroundColor === buttonId ? 'clicked-timer' : '';\n  }\n\n  //remove extra cards if option 12 is selected instead of 18\n  hideExtraCards() {\n\n    return {\n      display: this.state.setNumberOfCards === '12' ? 'none' : 'flex'\n    }\n  };\n\n  showStatistics() {\n    if (this.state.classActive === 'statistics-list_none') {\n      this.setState({\n        classActive: 'statistics-list',\n      })\n    } else\n      this.setState({\n        classActive: 'statistics-list_none',\n      })\n  }\n\n  //timer setting\n  timerOfGame(e) {\n    if (this.state.remainingTime === 'No timer') {\n      return;\n    }\n    if (this.state.progressGame === 'before start: cards not available') {\n      return;\n    }\n    clearInterval(this.timer);\n    this.timer = setInterval(() => {\n      if (!this.state.remainingTime) {\n        clearInterval(this.timer);\n        return false;\n      }\n      this.setState({\n        remainingTime: this.state.remainingTime - 1\n      });\n    }, 1000)\n  }\n\n  finishGame() {\n    this.setTimer = 'No timer';\n    this.setState({\n      cardLimitation: 0, //limitation on opening cards, no more than 2\n      imageNumber: [],\n      progressGame: 'before start: cards not available',\n      remainingTime: this.setTimer,\n      setNumberOfCards: '12',\n      backgroundColor: 'rgba(21, 126, 7, 0.61)',\n      countPairsOfOpenedCards: 1,  // number of opened card pairs\n      popapMessage: 'To start the game, click on the \"Start Game\"',\n    })\n    console.log('this.state.progressGame', this.state.progressGame, this.state.remainingTime);\n  }\n\n  // the layout of the cards when you click the \"Start game\" button\n  startGame(e) {\n    if (this.state.progressGame !== 'user is playing') {\n      let arrayOfImageNumber = [];\n      let number = this.state.setNumberOfCards;\n      for (let k = 1; k <= number; k++) {\n        arrayOfImageNumber.push(k);\n      }\n      this.shuffle(arrayOfImageNumber, number);\n      this.timeToRemember(arrayOfImageNumber);\n    }\n  }\n\n  // Fisher-Yates Shuffle\n  shuffle(arrayOfImageNumber, number) {\n    for (let i = arrayOfImageNumber.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [arrayOfImageNumber[i], arrayOfImageNumber[j]] = [arrayOfImageNumber[j], arrayOfImageNumber[i]];\n      arrayOfImageNumber[i] = arrayOfImageNumber[i] > number / 2 ? arrayOfImageNumber.length + 1 - arrayOfImageNumber[i] : arrayOfImageNumber[i];\n    }\n    arrayOfImageNumber[0] = arrayOfImageNumber[0] > number / 2 ? (arrayOfImageNumber.length + 1 - arrayOfImageNumber[0]) : arrayOfImageNumber[0];\n    this.setState({\n      imageNumber: arrayOfImageNumber,\n      progressGame: 'user is playing',\n    });\n  }\n\n  timeToRemember(arrayOfImageNumber) {\n    setTimeout(() => {\n      for (let i = 0; i < arrayOfImageNumber.length; i++) {\n        arrayOfImageNumber[i] = arrayOfImageNumber[i] + 'closed';\n      }\n      this.setState({\n        imageNumber: arrayOfImageNumber,\n      });\n      this.timerOfGame();\n    }, 4000);\n  }\n\n  openCloseCards(e) {\n    if (this.state.remainingTime !== 0 || this.state.remainingTime === 'No timer') {\n      if (this.state.progressGame === 'user is playing') {\n        if (this.state.cardLimitation === 0) {\n          this.twoOpenedValue = [];\n        }\n        if (this.state.cardLimitation < 2) {\n          let index = e.target.getAttribute('data-index');\n          let value = parseInt(this.state.imageNumber[index]);\n          this.twoOpenedValue.push(value);\n          this.setState({\n            imageNumber: {\n              ...this.state.imageNumber,\n              [index]: value,\n            },\n            cardLimitation: this.state.cardLimitation + 1,\n          })\n          // if two open cards are equal\n          if (this.twoOpenedValue.length === 2) {\n            if (this.twoOpenedValue[0] === this.twoOpenedValue[1]) {\n              this.twoOpenedValue = [];\n              this.setState({\n                countPairsOfOpenedCards: this.state.countPairsOfOpenedCards + 1,\n                cardLimitation: 0,\n              });\n\n              if (this.state.countPairsOfOpenedCards === this.state.setNumberOfCards / 2) {\n                this.statistics.push((this.setTimer - this.state.remainingTime));\n                if (this.statistics.length > 10) {\n                  this.statistics.shift();\n                }\n                this.theBestResult = Math.min(...(this.statistics.filter(item => typeof item === 'number')));\n                this.setTimer = 'No timer';\n                setTimeout(() =>\n                  this.setState({\n                    progressGame: 'before start: cards not available',\n                    popapMessage: 'To start the new game, click on the \"Start Game\"',\n                    imageNumber: [],\n                    countPairsOfOpenedCards: 1,\n                    remainingTime: 'No timer',\n                  }), 3000);\n\n                this.setState({\n                  progressGame: 'before start: cards not available',\n                  popapMessage: 'Excellent. You won',\n                  remainingTime: this.setTimer,\n                })\n              }\n            } else {\n              // if two open cards are NOT equal, you need to hide them again\n              setTimeout(() => {\n                for (let imageNumber in this.state.imageNumber) {\n                  const valueImageNumber = this.state.imageNumber[imageNumber];\n                  \n                  this.setState({\n                    imageNumber: {\n                      ...this.state.imageNumber,\n                      [imageNumber]: valueImageNumber === this.twoOpenedValue[0] || valueImageNumber === this.twoOpenedValue[1] ? this.state.imageNumber[imageNumber] + 'closed' : this.state.imageNumber[imageNumber]\n                    },\n                    cardLimitation: 0,\n                  })\n                }\n                console.log('должно удалиться')\n                this.twoOpenedValue = [];\n              }, 500);\n            }\n          }\n        }\n      }\n    } else if (this.state.remainingTime === 0) {\n        console.log('remainingTime losing', this.state.remainingTime);\n        this.statistics.push('losing');\n        if (this.statistics.length > 10) {\n          this.statistics.shift();\n        }\n        this.theBestResult = Math.min(...(this.statistics.filter(item => typeof item === 'number')));\n        this.setTimer = 'No timer';\n        this.setState({\n          remainingTime: 'No timer',\n          progressGame: 'before start: cards not available',\n          popapMessage: 'Unfortunately, you did not meet the deadline',\n        })\n        setTimeout(() =>\n          this.setState({\n            popapMessage: 'But you can try again, click on the \"Start Game\"',\n            imageNumber: [],\n            countPairsOfOpenedCards: 1,\n          }), 3000);\n      }\n  }\n\n  addClassNotAvailable() {\n    return (this.state.progressGame === 'before start: cards not available' ? \" not-available\" : '');\n  }\n\n  clickApp() {\n    const audioSound = document.getElementById('audio-sound');\n    audioSound.volume = audioSound.getAttribute('volume');\n    audioSound.pause();\n    audioSound.load();\n    audioSound.play();\n  }\n\n  render() {\n    return (\n      <div className=\"App\" style={{ background: this.state.backgroundColor }} onClick={this.clickApp}>\n        <div className=\"app-top\">\n          <div className=\"game-buttons\">\n            <button className=\"fullscreen\" onClick={this.fullscreen}>fullscreen</button>\n            <button className=\"button-start\" onClick={this.startGame}>Start game</button>\n            <button className=\"button-finish\" onClick={this.finishGame}>Finish game</button>\n          </div>\n          <div className={\"popap\" + (this.state.progressGame !== 'before start: cards not available' ? \" disappearance\" : \"\")}>\n            {this.state.popapMessage}\n          </div>\n          <div className=\"customization\">\n            <div className=\"customization__top\">\n              <p className=\"customization-score\">Score<span>{this.state.countPairsOfOpenedCards - 1}</span></p>\n              <p className=\"customization_title\">Game settings</p>\n              <div className=\"statistics\">\n                <button className=\"statistics__button\" onClick={this.showStatistics}>Statistics</button>\n                <div className={this.state.classActive}>\n                  <p className=\"statistics__p\">The best<span className=\"statistics__best\">{this.theBestResult}</span> seconds</p>\n                  <ol>\n                    <li>{this.statistics[0]}</li>\n                    <li>{this.statistics[1]}</li>\n                    <li>{this.statistics[2]}</li>\n                    <li>{this.statistics[3]}</li>\n                    <li>{this.statistics[4]}</li>\n                    <li>{this.statistics[5]}</li>\n                    <li>{this.statistics[6]}</li>\n                    <li>{this.statistics[7]}</li>\n                    <li>{this.statistics[8]}</li>\n                    <li>{this.statistics[9]}</li>\n                  </ol>\n                </div>\n              </div>\n            </div>\n            <div className=\"settings\">\n              <div className=\"timer-game\">\n                <p className=\"customization__settings\">Timer: <span>{this.state.remainingTime}</span></p>\n                <button data='No timer' className={this.isActiveButton('No timer')} onClick={this.chooseTimer}>No timer</button>\n                <button data=\"30\" className={this.isActiveButton('30')} onClick={this.chooseTimer}>30 seconds</button>\n                <button data=\"60\" className={this.isActiveButton('60')} onClick={this.chooseTimer}>60 seconds</button>\n              </div>\n              <div>\n                <p className=\"customization__settings\">Number of cards</p>\n                <button data=\"12\" className={this.isActiveButtonNumber('12')} onClick={this.chooseNumberOfCards}>12</button>\n                <button data=\"18\" className={this.isActiveButtonNumber('18')} onClick={this.chooseNumberOfCards}>18</button>\n              </div>\n              <div>\n                <p className=\"customization__settings\">Background color</p>\n                <button data=\"rgba(21, 126, 7, 0.61)\" className={this.isActiveButtonColor('rgba(21, 126, 7, 0.61)')} onClick={this.setBackgroundColor}>Green</button>\n\n                <button data=\"white\" className={this.isActiveButtonColor('white')} onClick={this.setBackgroundColor}>White</button>\n              </div>\n            </div>\n            <SoundsMusic />\n\n\n          </div>\n        </div>\n        <div className=\"block block-1\">\n          <div className={\"image image\" + this.state.imageNumber[0] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"0\"></div>\n          <div className={\"image image\" + this.state.imageNumber[1] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"1\"></div>\n          <div className={\"image image\" + this.state.imageNumber[2] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"2\"></div>\n          <div className={\"image image\" + this.state.imageNumber[3] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"3\"></div>\n          <div className={\"image image\" + this.state.imageNumber[4] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"4\"></div>\n          <div className={\"image image\" + this.state.imageNumber[5] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"5\"></div>\n        </div>\n        <div className=\"block block-2\">\n          <div className={\"image image\" + this.state.imageNumber[6] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"6\"></div>\n          <div className={\"image image\" + this.state.imageNumber[7] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"7\"></div>\n          <div className={\"image image\" + this.state.imageNumber[8] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"8\"></div>\n          <div className={\"image image\" + this.state.imageNumber[9] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"9\"></div>\n          <div className={\"image image\" + this.state.imageNumber[10] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"10\"></div>\n          <div className={\"image image\" + this.state.imageNumber[11] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"11\"></div>\n        </div>\n        <div className=\"block block-3\" style={this.hideExtraCards()}>\n          <div className={\"image image\" + this.state.imageNumber[12] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"12\"></div>\n          <div className={\"image image\" + this.state.imageNumber[13] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"13\"></div>\n          <div className={\"image image\" + this.state.imageNumber[14] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"14\"></div>\n          <div className={\"image image\" + this.state.imageNumber[15] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"15\"></div>\n          <div className={\"image image\" + this.state.imageNumber[16] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"16\"></div>\n          <div className={\"image image\" + this.state.imageNumber[17] + \" \" + this.addClassNotAvailable()} onClick={this.openCloseCards} data-index=\"17\"></div>\n        </div>\n        <footer>\n          <p className=\"footer__title\">\n            By <a href=\"https://github.com/MarinaYur\">Marina Yurkevich</a>, 2021\n          </p>\n          <a className=\"footer__logo\" href=\"https://rs.school/js/\">\n            <img src={logo} alt=\"logo\"></img>\n          </a>\n        </footer>\n      </div>\n\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}